using System;
using System.Collections.Generic;
using System.IO;
using JsonUtil = PurenailCore.SystemUtil.JsonUtil<MoreDoors.MoreDoors>;

namespace MoreDoors.Data;

public static class DataUpdater
{
    public static void Run()
    {
        string root = JsonUtil.InferGitRoot();
        string debugJsonPath = $"{root}/MoreDoors/Resources/Data/debug.json";
        string doorsJsonPath = $"{root}/MoreDoors/Resources/Data/doors.json";
        string namesPath = $"{root}/MoreDoors/Data/DoorNames.cs";

        bool anyErr = false;
        foreach (var door in DoorData.Data.Keys)
        {
            if (!DoorData.GetFromJson(door).ValidateAndUpdate(out string err))
            {
                Console.WriteLine($"Error on door {door}: {err}");
                anyErr = true;
            }
        }
        if (anyErr) throw new ArgumentException("Errors encountered");

        JsonUtil.RewriteJsonFile(DoorData.Data, doorsJsonPath);

        DebugData debugData = new() { DoorsJsonPath = doorsJsonPath };
        JsonUtil.RewriteJsonFile(debugData, debugJsonPath);

        RewriteDoorNamesFile(namesPath);
    }

    private static void RewriteDoorNamesFile(string path)
    {
        List<string> content = new()
        {
            "namespace MoreDoors.Data;",
            "",
            "// Generated by DataUpdater",
            "internal class DoorNames",
            "{"
        };
        foreach (var door in DoorData.Data.Keys)
        {
            content.Add($"    public const string {ConstName(door)} = \"{door}\";");
        }
        content.Add("}");
        content.Add("");

        File.Delete(path);
        File.WriteAllText(path, string.Join("\n", content.ToArray()));
    }

    private static string ConstName(string name) => name.ToUpper().Replace(" ", "_").Replace("'", "");
}
